ifblock BSP_PIC32MK_GP_DB_WVGA_MXT

menu "Select BSP Features"
    depends on USE_BSP
    depends on BSP_PIC32MK_GP_DB_WVGA_MXT

config BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT
    bool "Use USART to USB Bridge"
    depends on USE_BSP
    depends on BSP_PIC32MK_GP_DB_WVGA_MXT
    default y if BSP_USART_BRIDGE_NEEDED
    default n

config BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT
    int "USART Driver Instance Index"
    depends on USE_BSP
    depends on BSP_PIC32MK_GP_DB_WVGA_MXT
    depends on BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT
    range 0 0 if DRV_USART_INSTANCES_NUMBER = 1
    range 0 1 if DRV_USART_INSTANCES_NUMBER = 2
    range 0 2 if DRV_USART_INSTANCES_NUMBER = 3
    range 0 3 if DRV_USART_INSTANCES_NUMBER = 4
    range 0 4 if DRV_USART_INSTANCES_NUMBER = 5
    range 0 5 if DRV_USART_INSTANCES_NUMBER = 6
    range 0 6 if DRV_USART_INSTANCES_NUMBER = 7
    range 0 7 if DRV_USART_INSTANCES_NUMBER = 8
    range 0 8 if DRV_USART_INSTANCES_NUMBER = 9
    default 0
    set DRV_USART_PERIPHERAL_ID_IDX0 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 0 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX1 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 1 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX2 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 2 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX3 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 3 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX4 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 4 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX5 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 5 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX6 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 6 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX7 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 7 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)
    set DRV_USART_PERIPHERAL_ID_IDX8 optionally to "USART_ID_6" if (BSP_USART_ID_PIC32MK_GP_DB_WVGA_MXT = 8 && BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT)

config BSP_USART_BRIDGE_SETUP_PIC32MK_GP_DB_WVGA_MXT
    bool
    depends on BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT
    default y if BSP_USART_BRIDGE_PIC32MK_GP_DB_WVGA_MXT
    default n

  # USART Setup to support USART to USB Bridge
    set USE_DRV_USART to y
    set DRV_USART_DRIVER_MODE to "STATIC"
    set DRV_USART_INTERRUPT_MODE to n
    set DRV_USART_BYTE_MODEL_SUPPORT to y
    set DRV_USART_BYTE_MODEL_BLOCKING to y
    set DRV_USART_BYTE_MODEL_CALLBACK to n
    set DRV_USART_INSTANCES_NUMBER to 1
    set DRV_USART_CLIENTS_NUMBER to 1

    set DRV_USART_INST_IDX0 to y
    set DRV_USART_PERIPHERAL_ID_IDX0 to "USART_ID_6"
    set DRV_USART_BAUD_RATE_IDX0 to 115200
    set DRV_USART_OPER_MODE_IDX0 to "DRV_USART_OPERATION_MODE_NORMAL"
    set DRV_USART_INIT_FLAG_WAKE_ON_START_IDX0 to n
    set DRV_USART_INIT_FLAG_AUTO_BAUD_IDX0 to n
    set DRV_USART_INIT_FLAG_STOP_IN_IDLE_IDX0 to n
    set DRV_USART_LINE_CNTRL_IDX0 to "DRV_USART_LINE_CONTROL_8NONE1"
    set DRV_USART_HANDSHAKE_MODE_IDX0 to "DRV_USART_HANDSHAKE_NONE"

  # Pin configuration
    set BSP_PIN_51_FUNCTION_TYPE to "U6TX"
    set BSP_PIN_51_FUNCTION_NAME to "U6TX"
    set BSP_PIN_67_FUNCTION_TYPE to "U6RX"
    set BSP_PIN_67_FUNCTION_NAME to "U6RX"

config BSP_CONFIGURE_PIC32MK_GP_DB_WVGA_MXT
    bool
    depends on USE_BSP && BSP_PIC32MK_GP_DB_WVGA_MXT
    default y

    select BSP_TRIGGER
    select BSP_POSC_12MHz
    set SYS_CLK_CONFIG_PRIMARY_XTAL to "12000000"
    select BSP_USE_USBSWITCH

    select USE_GFX_PDA_TM5000_800X480_NEEDED  if BSP_GRAPHICS_NEEDED
    select USE_DRV_GFX_SSD1963_NEEDED         if BSP_GRAPHICS_NEEDED

  # System interrupts needed.
  # Don't need External Interrupt for MaxTouch_Change_Bar. Using Change Notification instead.
    set USE_SYS_INT to y
    set USE_EXT_INT to n                                           if BSP_TOUCH_INPUT_NEEDED
	set USE_EXT_INT to n                                           if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED 
	
  # MaxTouch setup.
    select USE_DRV_TOUCH_MXT336T_UPDATED_NEEDED                            if BSP_TOUCH_INPUT_NEEDED
	select USE_DRV_INPUT_MXT336T_NEEDED if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    select DRV_I2C_BIT_BANG_NEEDED if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
	
    set DRV_TOUCH_MXT336T_UPDATED_INTERRUPT_MODE to y                      if BSP_TOUCH_INPUT_NEEDED
    set DRV_TOUCH_MXT336T_UPDATED_INTERRUPT_GPIO to "INT_VECTOR_CHANGE_NOTICE_F" if BSP_TOUCH_INPUT_NEEDED
    set DRV_TOUCH_MXT336T_UPDATED_CHANGE_PIN_CHANNEL to "PORT_CHANNEL_F"   if BSP_TOUCH_INPUT_NEEDED
    set DRV_TOUCH_MXT336T_UPDATED_CHANGE_PIN_NUMBER  to "PORTS_BIT_POS_6"  if BSP_TOUCH_INPUT_NEEDED

  # Use RF6 with Change Notification for MaxTouch_Change_Bar output signal
    set BSP_PIN_91_FUNCTION_NAME to "MXT336T_TOUCH_INT"    if BSP_TOUCH_INPUT_NEEDED
    set BSP_PIN_91_FUNCTION_TYPE to "GPIO_IN"              if BSP_TOUCH_INPUT_NEEDED
    set USE_SYS_PORTS to y                                 if BSP_TOUCH_INPUT_NEEDED
    set SYS_PORTS_IMPLEMENTATION to "STATIC"               if BSP_TOUCH_INPUT_NEEDED
    set USE_SYS_PORTS_CN_INTERRUPT to y                    if BSP_TOUCH_INPUT_NEEDED
    set SYS_PORTS_CN_INTERRUPT_PRIORITY to "INT_PRIORITY_LEVEL5" if BSP_TOUCH_INPUT_NEEDED
    set SYS_PORTS_CN_INTERRUPT_SUB_PRIORITY to "INT_SUBPRIORITY_LEVEL0" if BSP_TOUCH_INPUT_NEEDED

	# Use RF6 with Change Notification for MaxTouch_Change_Bar output signal
    set BSP_PIN_91_FUNCTION_NAME to "MXT336T_TOUCH_INT"    if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set BSP_PIN_91_FUNCTION_TYPE to "GPIO_CN"              if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
	set USE_SYS_PORTS to y                                 if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set SYS_PORTS_IMPLEMENTATION to "STATIC"               if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set USE_SYS_PORTS_CN_INTERRUPT to y                    if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set SYS_PORTS_CN_INTERRUPT_PRIORITY to "INT_PRIORITY_LEVEL5" if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set SYS_PORTS_CN_INTERRUPT_SUB_PRIORITY to "INT_SUBPRIORITY_LEVEL0" if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
	
  # I2C to Touch Driver
    set USE_DRV_I2C to y                                   if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_DRIVER_MODE to "DYNAMIC"                   if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_INTERRUPT_MODE to y                        if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_CLIENTS_NUMBER to 1                        if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_INSTANCES_NUMBER to 1                      if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_FORCED_WRITE to n                          if BSP_TOUCH_INPUT_NEEDED

    set DRV_I2C_INST_IDX0 to y                             if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_BIT_BANG_IDX0 to y                         if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_PERIPHERAL_ID_IDX0 to "I2C_ID_1"           if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_OPERATION_MODE_IDX0 to "DRV_I2C_MODE_MASTER" if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_BIT_BANG_TMR_MODULE_IDX0 to "TMR_ID_9"     if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_BIT_BANG_BAUD_RATE_IDX0 to 50000           if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_BIT_BANG_INT_PRIORITY_IDX0 to "INT_PRIORITY_LEVEL3" if BSP_TOUCH_INPUT_NEEDED
    set DRV_I2C_BIT_BANG_INT_SUB_PRIORITY_IDX0 to "INT_SUBPRIORITY_LEVEL0" if BSP_TOUCH_INPUT_NEEDED

	set USE_DRV_I2C to y                                   if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_DRIVER_MODE to "DYNAMIC"                   if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_INTERRUPT_MODE to y                        if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_CLIENTS_NUMBER to 1                        if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_INSTANCES_NUMBER to 1                      if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_FORCED_WRITE to n                          if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED

    set DRV_I2C_INST_IDX0 to y                             if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_BIT_BANG_IDX0 to y                         if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_PERIPHERAL_ID_IDX0 to "I2C_ID_1"           if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_OPERATION_MODE_IDX0 to "DRV_I2C_MODE_MASTER" if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_BIT_BANG_TMR_MODULE_IDX0 to "TMR_ID_9"     if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_BIT_BANG_BAUD_RATE_IDX0 to 50000           if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_BIT_BANG_INT_PRIORITY_IDX0 to "INT_PRIORITY_LEVEL3" if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
    set DRV_I2C_BIT_BANG_INT_SUB_PRIORITY_IDX0 to "INT_SUBPRIORITY_LEVEL0" if BSP_TOUCH_INPUT_SYSTEM_SERVICE_NEEDED
	
  # Pins to drive display
    set BSP_PIN_1_FUNCTION_NAME  to "CHIP_SELECT_BAR"
    set BSP_PIN_1_FUNCTION_TYPE  to "GPIO_OUT"
    set BSP_PIN_6_FUNCTION_NAME  to "DATA_OR_COMMAND_BAR"
    set BSP_PIN_6_FUNCTION_TYPE  to "GPIO_OUT"
    set BSP_PIN_7_FUNCTION_NAME  to "RESET_BAR"
    set BSP_PIN_7_FUNCTION_TYPE  to "GPIO_OUT"

    set BSP_PIN_17_FUNCTION_NAME to "BACKLIGHT_PWM"
    set BSP_PIN_17_FUNCTION_TYPE to "GPIO_OUT"

    set BSP_PIN_81_FUNCTION_NAME to "WR_STROBE_BAR"
    set BSP_PIN_81_FUNCTION_TYPE to "GPIO_OUT"
    set BSP_PIN_82_FUNCTION_NAME to "RD_STROBE_BAR"
    set BSP_PIN_82_FUNCTION_TYPE to "GPIO_OUT"

    set BSP_PIN_38_FUNCTION_NAME to "BSP_SWITCH_1"
    set BSP_PIN_38_FUNCTION_TYPE to "SWITCH"
    set BSP_PIN_39_FUNCTION_NAME to "BSP_SWITCH_2"
    set BSP_PIN_39_FUNCTION_TYPE to "SWITCH"
    set BSP_PIN_40_FUNCTION_NAME to "BSP_SWITCH_3"
    set BSP_PIN_40_FUNCTION_TYPE to "SWITCH"
    set BSP_PIN_96_FUNCTION_NAME to "BSP_LED_1"
    set BSP_PIN_96_FUNCTION_TYPE to "LED_AH"
    set BSP_PIN_97_FUNCTION_NAME to "BSP_LED_2"
    set BSP_PIN_97_FUNCTION_TYPE to "LED_AH"
    set BSP_PIN_95_FUNCTION_NAME to "BSP_LED_3"
    set BSP_PIN_95_FUNCTION_TYPE to "LED_AH"
    ---help---
    IDH_HTML_BSP_pic32mk_gp_db_wvga_mxt
    ---endhelp---

endmenu


menu "Custom Board Configurations for PIC32MK (GP) Development Board + 5 inch WVGA + Touch"
    depends on USE_BSP

import PIC32MK_GP_DB_WVGA_MXT_IMPORT_ICB "Select Custom Configuration To Import"
    default "../*/*.mhc"
    ---help---
    IDH_HTML_Board_Support_Package_Help
    ---endhelp---

template BSP_PIC32MK_GP_DB_WVGA_MXT_H "$HARMONY_VERSION_PATH/bsp/pic32mk_gp_db+wvga_mxt/templates/bsp.h.ftl" to "$PROJECT_HEADER_FILES/app/system_config/$CONFIGURATION/bsp/bsp.h"
template BSP_PIC32MK_GP_DB_WVGA_MXT_C "$HARMONY_VERSION_PATH/bsp/pic32mk_gp_db+wvga_mxt/templates/bsp.c.ftl" to "$PROJECT_SOURCE_FILES/app/system_config/$CONFIGURATION/bsp/bsp.c"

compiler BSP_COMPILER_INCLUDE_PIC32MK_GP_DB_WVGA_MXT includepath "$PROJECT_HEADER_FILES/system_config/$CONFIGURATION/bsp"
endmenu

endif
